{"version":3,"sources":["components/Countdown.tsx","components/PlayerName.js","utils/utils.js","reducers/taskReducer.js","reducers/resultsReducer.js","services/scores.js","reducers/scoresReducer.js","reducers/playerReducer.js","App.js","store.js","index.js"],"names":["Countdown","React","forwardRef","ref","onTimeout","useState","time","setTime","pause","setPause","resetTime","pauseTimer","useImperativeHandle","startGame","setTimeout","useEffect","timeOut","clearTimeout","ProgressBar","now","label","PlayerName","onStartGame","show","setShow","name","setName","Modal","onHide","Header","Title","Body","className","htmlFor","onChange","event","target","value","type","id","Footer","Button","variant","onClick","getRndInteger","min","max","result","Math","floor","random","shuffleArray","array","i","length","j","temp","formatToNiceNumber","number","padding","pad","abs","generateCandidatesSum","candidates","Set","add","size","candidatesArray","generateCandidatesMultiplication","taskReducer","state","numbers","operation","action","answer","resultsReducer","baseUrl","process","axios","require","scoresUrl","console","log","getAll","a","get","response","data","map","e","score","createNew","payload","post","scoresService","scoresReducer","topScores","sort","b","lowestScore","res","slice","playerReducer","Scores","results","useSelector","store","n","nofMultipliers","residual","scores","r","idx","HighScores","Object","keys","scoreList","s","Candidates","onSelected","task","formattedCandidates","c","Col","col1","col2","Row","Streak","streak","Expression","operator","niceNumbers","str","App","player","timerForwRef","createRef","dispatch","useDispatch","createNewNumbers","choices","setNewScore","currentScore","current","Container","isCorrectAnswer","reducer","combineReducers","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.73c4bd78.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport ProgressBar from 'react-bootstrap/ProgressBar';\n\ntype Props = {\n  onTimeout: () => void\n}\n\nconst Countdown = React.forwardRef(({ onTimeout }: Props, ref) => {\n  const [time, setTime] = useState(100)\n  const [pause, setPause] = useState(true)\n\n  const resetTime = () => {\n    setTime(100)\n    pauseTimer()\n  }\n\n  React.useImperativeHandle(ref, () => {\n    return {\n      resetTime,\n      startGame\n    }\n  })  \n\n  const startGame =() => {\n    setPause(false)\n  }\n\n  const pauseTimer = () => {\n    setPause(true)\n    setTimeout(() => {\n      setPause(false)\n    }\n      , 1000)\n  }\n\n  useEffect(() => {\n\n    const timeOut = setTimeout(() => {\n      if (time <= 0) {\n        setTime(100)\n        onTimeout()\n        pauseTimer()\n      } else {\n        if (!pause) setTime(time - 1)\n      }\n    }, 100);\n    return () => clearTimeout(timeOut)\n  })\n\n  return <ProgressBar now={time} label={`${time}%`} />\n})\n\nexport default Countdown","import Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button'\nimport { useState } from 'react'\n\nconst PlayerName = ({ onStartGame }) => {\n\n    const [show, setShow] = useState(true)\n    const [name, setName] = useState(\"\")\n    const onClick = () => {\n        setShow(false);\n        onStartGame(name)\n    }\n\n    return (\n        <Modal show={show} onHide={() => { }}>\n            <Modal.Header>\n                <Modal.Title>Are you ready?</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <div className=\"form-group\">\n                    <label htmlFor=\"formGroupExampleInput\">Player's name</label>\n                    <input onChange={(event) => setName(event.target.value)}\n                        value={name}\n                        type=\"text\"\n                        className=\"form-control\"\n                        id=\"formGroupExampleInput\"\n                    />\n                </div>\n\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"primary\" onClick={onClick}>\n                    I'm scared ...but I think so\n                </Button>\n            </Modal.Footer>\n        </Modal>\n    )\n}\n\nexport default PlayerName","export const getRndInteger = (min, max) => {\n  let result = 0\n  do {\n    result = Math.floor(Math.random() * (max - min + 1)) + min;\n  } while (result === 0)\n\n  return result\n}\n\n/**  \n * Copy-pasted from Stack overflow. Shuffles an array in place. \n */\nexport const shuffleArray = (array) => {\n  for (var i = array.length - 1; i > 0; i--) {\n    var j = Math.floor(Math.random() * (i + 1));\n    var temp = array[i];\n    array[i] = array[j];\n    array[j] = temp;\n  }\n}\n\nexport const formatToNiceNumber = (number, padding) => {\n  let pad = \"\"\n  if (padding) {\n    pad = \"⠀\"  // U+2800 = empty character!!\n  }\n  if (number < 0) {\n    return \"−\" + Math.abs(number) + pad\n  }\n  return number\n}\n\n/**  \n * Copy-pasted from Stack overflow :)\n */\nexport const choose = (choices) => {\n  var index = Math.floor(Math.random() * choices.length);\n  return choices[index];\n}","import { getRndInteger, shuffleArray } from '../utils/utils.js'\n\n\nconst generateCandidatesSum = (result) => {\n  const candidates = new Set()\n  candidates.add(result)\n\n\n  candidates.add(-result)\n\n\n  do {\n    candidates.add(getRndInteger(-5, 5))\n  } while (candidates.size < 4)\n\n  const candidatesArray = [...candidates]\n  shuffleArray(candidatesArray)\n  return candidatesArray\n}\n\nconst generateCandidatesMultiplication = (result) => {\n  const candidates = new Set()\n  candidates.add(result)\n  candidates.add(-result)\n\n  do {\n    candidates.add(getRndInteger(-20, 21))\n  } while (candidates.size < 4)\n\n  const candidatesArray = [...candidates]\n  shuffleArray(candidatesArray)\n  return candidatesArray\n}\n\n\nconst taskReducer = (state = { numbers: [0, 0], operation: \"SUM\", candidates: [] }, action) => {\n  switch (action.type) {\n    case 'SET_RANDOM_VALUES':\n      const numbers = [getRndInteger(action.min, action.max), getRndInteger(action.min, action.max)]\n      let answer = 0\n      let candidates = []\n\n      if (action.operation === \"SUM\") {\n        answer = numbers[0] + numbers[1]\n        candidates = generateCandidatesSum(answer)\n      } else if (action.operation === \"MULTIPLICATION\") {\n        answer = numbers[0] * numbers[1]\n        candidates = generateCandidatesMultiplication(answer)\n      }\n\n      return {\n        numbers,\n        operation: action.operation,\n        answer,\n        candidates\n      }\n\n    default:\n      return state\n  }\n}\n\nexport const generateNumbers = (min, max, operation) => {\n  return {\n    type: 'SET_RANDOM_VALUES',\n    min,\n    max,\n    operation\n  }\n}\n\n\nexport default taskReducer","\nconst resultsReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'CORRECT':\n      return [...state, 1]\n    case 'INCORRECT':\n      return []\n    default:\n      return state\n  }\n}\n\nexport const wrongAnswer = () => {\n  return {\n    type: 'INCORRECT'\n  }\n}\n\nexport const rightAnswer = () => {\n  return {\n    type: 'CORRECT'\n  }\n}\n\nexport default resultsReducer\n","const baseUrl = process.env.REACT_APP_API_URL\nconst axios = require('axios')\n//const camelcaseKeys = require('camelcase-keys')\n//const snakecaseKeys = require('snakecase-keys')\nconst scoresUrl = `${baseUrl}/scores`\n\nconsole.log(baseUrl)\n\nconst getAll = async () => {\n    const response = await axios.get(scoresUrl)\n        \n    return response.data.map(e => {\n        return {\n            name: e.name, score: e.score\n        }\n    })\n}\n\nconst createNew = async (payload) => {\n    \n    const response = await axios.post(scoresUrl, payload)\n    const data = response.data\n    return {\n        name: data.name,\n        score: data.score                                                \n    }\n\n}\n                                     \nconst scoresService = {\n    getAll,\n    createNew\n}\n\nexport default scoresService","import scoresService from \"../services/scores\"\n\nconst scoresReducer = (state = {}, action) => {\n    switch (action.type) {\n        case 'NEW_SCORE':\n            const topScores = [...state.topScores, action.data]\n            topScores.sort((a, b) => b.score - a.score)\n            const lowestScore = topScores[topScores.length - 1].score\n            const res = {\n                topScores: topScores.slice(0,10),\n                lowestScore\n            }\n            return res\n        case 'INIT_SCORES':\n            return action.data\n        default:\n            return state\n    }\n}\n\nexport const initializeScores = () => {\n    return async dispatch => {\n        const scores = await scoresService.getAll()\n        scores.sort((a, b) => b.score - a.score)\n        const topScores = scores.slice(0, 10)\n\n        const lowestScore = scores.length === 0? 0 : scores[topScores.length - 1].score\n\n        dispatch({\n            type: 'INIT_SCORES',\n            data: {\n                topScores,\n                lowestScore\n            }\n        })\n    }\n}\n\nexport const newScore = (name, score) => {\n\n    return async dispatch => {\n        const result = await scoresService.createNew({ name, score })\n\n        dispatch({\n            type: 'NEW_SCORE',\n            data: result\n        })\n    }\n}\n\n\n\nexport default scoresReducer","\nconst playerReducer = (state = \"\", action) => {\n    switch (action.type) {\n        case 'SET_NAME':\n            return action.value\n        default:\n            return state\n    }\n}\n\nexport const setName = (value) => {\n    return {\n        type: 'SET_NAME',\n        value\n    }\n}\n\nexport default playerReducer","import Container from 'react-bootstrap/Container'\n\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport './App.css';\nimport Countdown from './components/Countdown.tsx'\nimport PlayerName from './components/PlayerName';\nimport { formatToNiceNumber, choose } from './utils/utils.js'\nimport React, { useEffect } from 'react'\nimport { generateNumbers } from './reducers/taskReducer'\nimport { wrongAnswer, rightAnswer } from './reducers/resultsReducer'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { initializeScores, newScore } from './reducers/scoresReducer'\nimport { setName } from './reducers/playerReducer';\n\nfunction App() {\n\n  const task = useSelector((store) => store.task)\n  const results = useSelector((store) => store.results)\n  const scores = useSelector(store => store.scores)\n  const player = useSelector(store => store.player)\n\n  const timerForwRef = React.createRef()\n\n  const dispatch = useDispatch()\n\n  const createNewNumbers = () => {\n    dispatch(generateNumbers(-5, 5, choose([\"SUM\", \"MULTIPLICATION\"])))\n  }\n\n  useEffect(() => {\n    createNewNumbers()\n  }, []) // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    dispatch(initializeScores())\n  }, []) // eslint-disable-line react-hooks/exhaustive-deps\n\n  const onClickHandler = (res) => {\n\n    const isCorrectAnswer = res === task.answer\n    timerForwRef.current.resetTime()\n\n    if (isCorrectAnswer) {\n      dispatch(rightAnswer())\n    } else {\n      setNewScore(player, results.length)\n      dispatch(wrongAnswer())\n\n    }\n    createNewNumbers()\n\n  }\n\n  const setNewScore = (player, currentScore) => {\n    if (currentScore === 0){\n      return\n    }\n\n    if (currentScore >= scores.lowestScore || scores.topScores.length < 10) {      \n      dispatch(newScore(player, currentScore))\n    }\n  }\n\n  const onTimeout = () => {\n    setNewScore(player, results.length)\n    dispatch(wrongAnswer())\n    createNewNumbers()\n  }\n\n  const onStartGame = (name) => {\n    dispatch(setName(name))\n    timerForwRef.current.startGame()\n  }\n\n  return (<>\n    <PlayerName onStartGame={onStartGame} />\n\n    <div className=\"Container\">\n      <Container>\n        <Row>\n          <Col>\n            <div className=\"Blackboard\">\n              <Expression />\n            </div>\n          </Col>\n        </Row>\n        <Candidates onSelected={onClickHandler} />\n        <Streak results={results} />\n        <Countdown ref={timerForwRef} onTimeout={() => onTimeout()} />\n        <hr />        \n        <Row><Col><Scores/></Col><Col><HighScores/></Col></Row>\n      </Container>\n\n    </div></>)\n}\n\nconst Scores = () => {\n  const multiplier = 10\n  const results = useSelector(store => store.results)\n  const n = results.length\n  const nofMultipliers = Math.floor(n / multiplier) * multiplier\n  const residual = n < 5 ? n : (n % multiplier)\n\n  const scores = results.slice(0, residual).map((r, idx) => { if (r === 1) { return (<span key={idx}>😃</span>) } else { return (<span key={idx}>😢</span>) } })\n  return (\n    <div className=\"Emoji\">\n      {nofMultipliers > 0 ? <div>{nofMultipliers}x😃</div> : <></>}\n      <div>{scores}</div>\n    </div>)\n}\n\nconst HighScores = () => {\n  \n  const scores = useSelector((store) => store.scores)\n  if (Object.keys(scores).length === 0){\n    return <div>Loading...</div>\n  }\n  \n  const scoreList = scores.topScores.map((s, idx) => <div key={idx}>{idx+1}. {s.name}: {s.score}</div>)\n  return <div className=\"HighScores\"><div ><b>HIGHSCORES</b><hr/></div><div>{scoreList}</div></div>\n}\n\nconst Candidates = ({ onSelected }) => {\n\n  const candidates = useSelector(store => store.task.candidates)\n  const formattedCandidates = candidates\n    .map(c => <Col key={c}><div onClick={() => onSelected(c)} className=\"Number\"> {formatToNiceNumber(c, true)} </div></Col>)\n\n  const col1 = formattedCandidates.slice(0, 2)\n  const col2 = formattedCandidates.slice(-2)\n  return <><Row>{col1}</Row><Row>{col2}</Row></>\n}\n\n// Some redundancy here since I changed the implementation to show only streaks\nconst Streak = () => {\n  const results = useSelector(store => store.results)\n  let length = results.length - 1\n  let streak = 0\n  while (length >= 0 && results[length] === 1) {\n    streak += 1\n    length -= 1\n  }\n  return <div className=\"Streak\">Win Streak: {streak}</div>\n}\n\nconst Expression = () => {\n  const task = useSelector(store => store.task)\n  const operator = task.operation === \"SUM\" ? \"+\" : \"·\"\n  const niceNumbers = task.numbers.map(n => formatToNiceNumber(n, false))\n\n  if (task.numbers[1] < 0) {\n    const str = `${niceNumbers[0]} ${operator} (${niceNumbers[1]}) =`\n    return (<div>\n      {str}\n    </div>)\n  }\n\n  else {\n    const str = `${niceNumbers[0]} ${operator} ${niceNumbers[1]} =`\n    return (<div>\n      {str}\n    </div>)\n  }\n}\n\nexport default App;\n\n","import taskReducer from './reducers/taskReducer'\nimport resultsReducer from './reducers/resultsReducer'\nimport scoresReducer from './reducers/scoresReducer'\nimport playerReducer from './reducers/playerReducer'\nimport { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\n\nconst reducer = combineReducers({\n  task: taskReducer,\n  results: resultsReducer,\n  scores: scoresReducer,\n  player: playerReducer\n})\n\nconst store = createStore(reducer, applyMiddleware(thunk))\n\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Provider } from 'react-redux'\nimport store from './store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}