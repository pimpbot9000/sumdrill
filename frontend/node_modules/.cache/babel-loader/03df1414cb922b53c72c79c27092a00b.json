{"ast":null,"code":"export const getRndInteger = (min, max) => {\n  let result = 0;\n\n  do {\n    result = Math.floor(Math.random() * (max - min + 1)) + min;\n  } while (result === 0);\n\n  return result;\n};\n/**  \n * Copy-pasted from Stack overflow. Shuffles an array in place. \n */\n\nexport const shuffleArray = array => {\n  for (var i = array.length - 1; i > 0; i--) {\n    var j = Math.floor(Math.random() * (i + 1));\n    var temp = array[i];\n    array[i] = array[j];\n    array[j] = temp;\n  }\n};\nexport const formatToNiceNumber = (number, padding) => {\n  let pad = \"\";\n\n  if (padding) {\n    pad = \"⠀\"; // U+2800 = empty character!!\n  }\n\n  if (number < 0) {\n    return \"−\" + Math.abs(number) + pad;\n  }\n\n  return number;\n};\n/**  \n * Copy-pasted from Stack overflow :)\n */\n\nexport const choose = choices => {\n  var index = Math.floor(Math.random() * choices.length);\n  return choices[index];\n};","map":{"version":3,"sources":["/usr/src/app/src/utils/utils.js"],"names":["getRndInteger","min","max","result","Math","floor","random","shuffleArray","array","i","length","j","temp","formatToNiceNumber","number","padding","pad","abs","choose","choices","index"],"mappings":"AAAA,OAAO,MAAMA,aAAa,GAAG,CAACC,GAAD,EAAMC,GAAN,KAAc;AACzC,MAAIC,MAAM,GAAG,CAAb;;AACA,KAAG;AACDA,IAAAA,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBJ,GAAG,GAAGD,GAAN,GAAY,CAA7B,CAAX,IAA8CA,GAAvD;AACD,GAFD,QAESE,MAAM,KAAK,CAFpB;;AAIA,SAAOA,MAAP;AACD,CAPM;AASP;AACA;AACA;;AACA,OAAO,MAAMI,YAAY,GAAIC,KAAD,IAAW;AACrC,OAAK,IAAIC,CAAC,GAAGD,KAAK,CAACE,MAAN,GAAe,CAA5B,EAA+BD,CAAC,GAAG,CAAnC,EAAsCA,CAAC,EAAvC,EAA2C;AACzC,QAAIE,CAAC,GAAGP,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBG,CAAC,GAAG,CAArB,CAAX,CAAR;AACA,QAAIG,IAAI,GAAGJ,KAAK,CAACC,CAAD,CAAhB;AACAD,IAAAA,KAAK,CAACC,CAAD,CAAL,GAAWD,KAAK,CAACG,CAAD,CAAhB;AACAH,IAAAA,KAAK,CAACG,CAAD,CAAL,GAAWC,IAAX;AACD;AACF,CAPM;AASP,OAAO,MAAMC,kBAAkB,GAAG,CAACC,MAAD,EAASC,OAAT,KAAqB;AACrD,MAAIC,GAAG,GAAG,EAAV;;AACA,MAAID,OAAJ,EAAa;AACXC,IAAAA,GAAG,GAAG,GAAN,CADW,CACA;AACZ;;AACD,MAAIF,MAAM,GAAG,CAAb,EAAgB;AACd,WAAO,MAAMV,IAAI,CAACa,GAAL,CAASH,MAAT,CAAN,GAAyBE,GAAhC;AACD;;AACD,SAAOF,MAAP;AACD,CATM;AAWP;AACA;AACA;;AACA,OAAO,MAAMI,MAAM,GAAIC,OAAD,IAAa;AACjC,MAAIC,KAAK,GAAGhB,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBa,OAAO,CAACT,MAAnC,CAAZ;AACA,SAAOS,OAAO,CAACC,KAAD,CAAd;AACD,CAHM","sourcesContent":["export const getRndInteger = (min, max) => {\n  let result = 0\n  do {\n    result = Math.floor(Math.random() * (max - min + 1)) + min;\n  } while (result === 0)\n\n  return result\n}\n\n/**  \n * Copy-pasted from Stack overflow. Shuffles an array in place. \n */\nexport const shuffleArray = (array) => {\n  for (var i = array.length - 1; i > 0; i--) {\n    var j = Math.floor(Math.random() * (i + 1));\n    var temp = array[i];\n    array[i] = array[j];\n    array[j] = temp;\n  }\n}\n\nexport const formatToNiceNumber = (number, padding) => {\n  let pad = \"\"\n  if (padding) {\n    pad = \"⠀\"  // U+2800 = empty character!!\n  }\n  if (number < 0) {\n    return \"−\" + Math.abs(number) + pad\n  }\n  return number\n}\n\n/**  \n * Copy-pasted from Stack overflow :)\n */\nexport const choose = (choices) => {\n  var index = Math.floor(Math.random() * choices.length);\n  return choices[index];\n}"]},"metadata":{},"sourceType":"module"}