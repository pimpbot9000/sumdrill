{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/src/App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$(),\n    _s5 = $RefreshSig$(),\n    _s6 = $RefreshSig$();\n\nimport Container from 'react-bootstrap/Container';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport './App.css';\nimport Countdown from './components/Countdown.tsx';\nimport PlayerName from './components/PlayerName';\nimport { formatToNiceNumber, choose } from './utils/utils.js';\nimport React, { useEffect } from 'react';\nimport { generateNumbers } from './reducers/taskReducer';\nimport { wrongAnswer, rightAnswer } from './reducers/resultsReducer';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { initializeScores, newScore } from './reducers/scoresReducer';\nimport { setName } from './reducers/playerReducer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const task = useSelector(store => store.task);\n  const results = useSelector(store => store.results);\n  const scores = useSelector(store => store.scores);\n  const player = useSelector(store => store.player);\n  const timerForwRef = /*#__PURE__*/React.createRef();\n  const dispatch = useDispatch();\n\n  const createNewNumbers = () => {\n    dispatch(generateNumbers(-5, 5, choose([\"SUM\", \"MULTIPLICATION\"])));\n  };\n\n  useEffect(() => {\n    createNewNumbers();\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    dispatch(initializeScores());\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const onClickHandler = res => {\n    const isCorrectAnswer = res === task.answer;\n    timerForwRef.current.resetTime();\n\n    if (isCorrectAnswer) {\n      dispatch(rightAnswer());\n    } else {\n      setNewScore(player, results.length);\n      dispatch(wrongAnswer());\n    }\n\n    createNewNumbers();\n  };\n\n  const setNewScore = (player, currentScore) => {\n    if (currentScore === 0) {\n      return;\n    }\n\n    if (currentScore >= scores.lowestScore || scores.topScores.length < 10) {\n      dispatch(newScore(player, currentScore));\n    }\n  };\n\n  const onTimeout = () => {\n    setNewScore(player, results.length);\n    dispatch(wrongAnswer());\n    createNewNumbers();\n  };\n\n  const onStartGame = name => {\n    dispatch(setName(name));\n    timerForwRef.current.startGame();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(PlayerName, {\n      onStartGame: onStartGame\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Container\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"Blackboard\",\n              children: /*#__PURE__*/_jsxDEV(Expression, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Candidates, {\n          onSelected: onClickHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Streak, {\n          results: results\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Countdown, {\n          ref: timerForwRef,\n          onTimeout: () => onTimeout()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Scores, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(HighScores, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 39\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 34\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"FGegJjipzJJ3D5GM08hVhfoIvGQ=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = App;\n\nconst Scores = () => {\n  _s2();\n\n  const multiplier = 10;\n  const results = useSelector(store => store.results);\n  const n = results.length;\n  const nofMultipliers = Math.floor(n / multiplier) * multiplier;\n  const residual = n < 5 ? n : n % multiplier;\n  const scores = results.slice(0, residual).map((r, idx) => {\n    if (r === 1) {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\uD83D\\uDE03\"\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 86\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\uD83D\\uDE22\"\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 130\n      }, this);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Emoji\",\n    children: [nofMultipliers > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [nofMultipliers, \"x\\uD83D\\uDE03\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 29\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: scores\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(Scores, \"Yag2PiJG5nhVgIZD/LrVw7fEXBE=\", false, function () {\n  return [useSelector];\n});\n\n_c2 = Scores;\n\nconst HighScores = () => {\n  _s3();\n\n  const scores = useSelector(store => store.scores);\n\n  if (Object.keys(scores).length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 12\n    }, this);\n  }\n\n  const scoreList = scores.topScores.map((s, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [idx + 1, \". \", s.name, \": \", s.score]\n  }, idx, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 54\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"HighScores\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"HIGHSCORES\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 44\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 61\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 38\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: scoreList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 72\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 10\n  }, this);\n};\n\n_s3(HighScores, \"pDhmYHJcPisYfwutWShO7WFSu4g=\", false, function () {\n  return [useSelector];\n});\n\n_c3 = HighScores;\n\nconst Candidates = _ref => {\n  _s4();\n\n  let {\n    onSelected\n  } = _ref;\n  const candidates = useSelector(store => store.task.candidates);\n  const formattedCandidates = candidates.map(c => /*#__PURE__*/_jsxDEV(Col, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => onSelected(c),\n      className: \"Number\",\n      children: [\" \", formatToNiceNumber(c, true), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 28\n    }, this)\n  }, c, false, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 15\n  }, this));\n  const col1 = formattedCandidates.slice(0, 2);\n  const col2 = formattedCandidates.slice(-2);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: col1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: col2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 29\n    }, this)]\n  }, void 0, true);\n}; // Some redundancy here since I changed the implementation to show only streaks\n\n\n_s4(Candidates, \"kQ6vwPucxs+7Q0cLXfhv/oMdqXk=\", false, function () {\n  return [useSelector];\n});\n\n_c4 = Candidates;\n\nconst Streak = () => {\n  _s5();\n\n  const results = useSelector(store => store.results);\n  let length = results.length - 1;\n  let streak = 0;\n\n  while (length >= 0 && results[length] === 1) {\n    streak += 1;\n    length -= 1;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Streak\",\n    children: [\"Win Streak: \", streak]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 10\n  }, this);\n};\n\n_s5(Streak, \"Yag2PiJG5nhVgIZD/LrVw7fEXBE=\", false, function () {\n  return [useSelector];\n});\n\n_c5 = Streak;\n\nconst Expression = () => {\n  _s6();\n\n  const task = useSelector(store => store.task);\n  const operator = task.operation === \"SUM\" ? \"+\" : \"·\";\n  const niceNumbers = task.numbers.map(n => formatToNiceNumber(n, false));\n\n  if (task.numbers[1] < 0) {\n    const str = `${niceNumbers[0]} ${operator} (${niceNumbers[1]}) =`;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: str\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }, this);\n  } else {\n    const str = `${niceNumbers[0]} ${operator} ${niceNumbers[1]} =`;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: str\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_s6(Expression, \"ElZFQss04II47DNq8hcbJvtrEkE=\", false, function () {\n  return [useSelector];\n});\n\n_c6 = Expression;\nexport default App;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Scores\");\n$RefreshReg$(_c3, \"HighScores\");\n$RefreshReg$(_c4, \"Candidates\");\n$RefreshReg$(_c5, \"Streak\");\n$RefreshReg$(_c6, \"Expression\");","map":{"version":3,"sources":["/usr/src/app/src/App.js"],"names":["Container","Col","Row","Countdown","PlayerName","formatToNiceNumber","choose","React","useEffect","generateNumbers","wrongAnswer","rightAnswer","useDispatch","useSelector","initializeScores","newScore","setName","App","task","store","results","scores","player","timerForwRef","createRef","dispatch","createNewNumbers","onClickHandler","res","isCorrectAnswer","answer","current","resetTime","setNewScore","length","currentScore","lowestScore","topScores","onTimeout","onStartGame","name","startGame","Scores","multiplier","n","nofMultipliers","Math","floor","residual","slice","map","r","idx","HighScores","Object","keys","scoreList","s","score","Candidates","onSelected","candidates","formattedCandidates","c","col1","col2","Streak","streak","Expression","operator","operation","niceNumbers","numbers","str"],"mappings":"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","sourcesContent":["import Container from 'react-bootstrap/Container'\n\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport './App.css';\nimport Countdown from './components/Countdown.tsx'\nimport PlayerName from './components/PlayerName';\nimport { formatToNiceNumber, choose } from './utils/utils.js'\nimport React, { useEffect } from 'react'\nimport { generateNumbers } from './reducers/taskReducer'\nimport { wrongAnswer, rightAnswer } from './reducers/resultsReducer'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { initializeScores, newScore } from './reducers/scoresReducer'\nimport { setName } from './reducers/playerReducer';\n\nfunction App() {\n\n  const task = useSelector((store) => store.task)\n  const results = useSelector((store) => store.results)\n  const scores = useSelector(store => store.scores)\n  const player = useSelector(store => store.player)\n\n  const timerForwRef = React.createRef()\n\n  const dispatch = useDispatch()\n\n  const createNewNumbers = () => {\n    dispatch(generateNumbers(-5, 5, choose([\"SUM\", \"MULTIPLICATION\"])))\n  }\n\n  useEffect(() => {\n    createNewNumbers()\n  }, []) // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    dispatch(initializeScores())\n  }, []) // eslint-disable-line react-hooks/exhaustive-deps\n\n  const onClickHandler = (res) => {\n\n    const isCorrectAnswer = res === task.answer\n    timerForwRef.current.resetTime()\n\n    if (isCorrectAnswer) {\n      dispatch(rightAnswer())\n    } else {\n      setNewScore(player, results.length)\n      dispatch(wrongAnswer())\n\n    }\n    createNewNumbers()\n\n  }\n\n  const setNewScore = (player, currentScore) => {\n    if (currentScore === 0){\n      return\n    }\n\n    if (currentScore >= scores.lowestScore || scores.topScores.length < 10) {      \n      dispatch(newScore(player, currentScore))\n    }\n  }\n\n  const onTimeout = () => {\n    setNewScore(player, results.length)\n    dispatch(wrongAnswer())\n    createNewNumbers()\n  }\n\n  const onStartGame = (name) => {\n    dispatch(setName(name))\n    timerForwRef.current.startGame()\n  }\n\n  return (<>\n    <PlayerName onStartGame={onStartGame} />\n\n    <div className=\"Container\">\n      <Container>\n        <Row>\n          <Col>\n            <div className=\"Blackboard\">\n              <Expression />\n            </div>\n          </Col>\n        </Row>\n        <Candidates onSelected={onClickHandler} />\n        <Streak results={results} />\n        <Countdown ref={timerForwRef} onTimeout={() => onTimeout()} />\n        <hr />        \n        <Row><Col><Scores/></Col><Col><HighScores/></Col></Row>\n      </Container>\n\n    </div></>)\n}\n\nconst Scores = () => {\n  const multiplier = 10\n  const results = useSelector(store => store.results)\n  const n = results.length\n  const nofMultipliers = Math.floor(n / multiplier) * multiplier\n  const residual = n < 5 ? n : (n % multiplier)\n\n  const scores = results.slice(0, residual).map((r, idx) => { if (r === 1) { return (<span key={idx}>😃</span>) } else { return (<span key={idx}>😢</span>) } })\n  return (\n    <div className=\"Emoji\">\n      {nofMultipliers > 0 ? <div>{nofMultipliers}x😃</div> : <></>}\n      <div>{scores}</div>\n    </div>)\n}\n\nconst HighScores = () => {\n  \n  const scores = useSelector((store) => store.scores)\n  if (Object.keys(scores).length === 0){\n    return <div>Loading...</div>\n  }\n  \n  const scoreList = scores.topScores.map((s, idx) => <div key={idx}>{idx+1}. {s.name}: {s.score}</div>)\n  return <div className=\"HighScores\"><div ><b>HIGHSCORES</b><hr/></div><div>{scoreList}</div></div>\n}\n\nconst Candidates = ({ onSelected }) => {\n\n  const candidates = useSelector(store => store.task.candidates)\n  const formattedCandidates = candidates\n    .map(c => <Col key={c}><div onClick={() => onSelected(c)} className=\"Number\"> {formatToNiceNumber(c, true)} </div></Col>)\n\n  const col1 = formattedCandidates.slice(0, 2)\n  const col2 = formattedCandidates.slice(-2)\n  return <><Row>{col1}</Row><Row>{col2}</Row></>\n}\n\n// Some redundancy here since I changed the implementation to show only streaks\nconst Streak = () => {\n  const results = useSelector(store => store.results)\n  let length = results.length - 1\n  let streak = 0\n  while (length >= 0 && results[length] === 1) {\n    streak += 1\n    length -= 1\n  }\n  return <div className=\"Streak\">Win Streak: {streak}</div>\n}\n\nconst Expression = () => {\n  const task = useSelector(store => store.task)\n  const operator = task.operation === \"SUM\" ? \"+\" : \"·\"\n  const niceNumbers = task.numbers.map(n => formatToNiceNumber(n, false))\n\n  if (task.numbers[1] < 0) {\n    const str = `${niceNumbers[0]} ${operator} (${niceNumbers[1]}) =`\n    return (<div>\n      {str}\n    </div>)\n  }\n\n  else {\n    const str = `${niceNumbers[0]} ${operator} ${niceNumbers[1]} =`\n    return (<div>\n      {str}\n    </div>)\n  }\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}